{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SACpC,IAAIC,EAAc,EACdC,EAAU,EACVC,EAAW,EACXC,EAAS,EACTC,EAAQ,EACRC,EAAO,EAEXR,EAAKS,iBAAiB,UAEtB,SAAoBC,GAClBA,EAAEC,iBAEFJ,EAAQK,OAAOZ,EAAKa,SAASC,MAAMC,OAEnCT,EAASM,OAAOZ,EAAKa,SAASG,OAAOD,OAErCP,EAAOI,OAAOZ,EAAKa,SAASI,KAAKF,OAEjCZ,EAAce,aAAY,KACxBb,GAAY,EACRA,EAAW,IACbE,GAASC,GAIXW,QAAQC,IAAIb,GACZY,QAAQC,IAAIf,GAoBhB,SAAuBgB,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BxB,EAAUc,aAAY,KAChBK,EACFI,EAAQ,CAAEE,SAAAR,EAAUP,MAAAQ,IAEpBM,EAAO,CAAEC,SAAAR,EAAUP,MAAAQ,GAAQ,GAE5BA,EAAM,G,CA7BTQ,CAAczB,EAAUE,GACrBwB,MAAK,EAAGF,SAAAG,EAAUlB,MAAAmB,MACjBC,EAAApC,GAASqC,OAAOC,QACd,uBAAqBJ,QAAiBC,MAAU,IAGnDI,OAAM,EAAGR,SAAAS,EAAUxB,MAAAyB,MAClBL,EAAApC,GAASqC,OAAOK,QACd,sBAAoBF,QAAiBC,MAAU,IAIjDlC,GAAYC,IACdmC,cAActC,GACdE,EAAW,E,GAEZE,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nlet submitTimer = 0;\nlet timerId = 0;\nlet position = 0;\nlet amount = 0;\nlet delay = 0;\nlet step = 0;\n\nform.addEventListener('submit', submitForm);\n\nfunction submitForm(e) {\n  e.preventDefault();\n\n  delay = Number(form.elements.delay.value);\n\n  amount = Number(form.elements.amount.value);\n\n  step = Number(form.elements.step.value);\n\n  submitTimer = setInterval(() => {\n    position += 1;\n    if (position > 1) {\n      delay += step;\n    } else {\n      delay;\n    }\n    console.log(delay);\n    console.log(position);\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    if (position >= amount) {\n      clearInterval(submitTimer);\n      position = 0;\n    }\n  }, delay);\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    timerId = setInterval(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// createPromise(position, delay)\n//   .then(({ position, delay }) => {\n\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$submitTimer","$47d4ff9957288465$var$timerId","$47d4ff9957288465$var$position","$47d4ff9957288465$var$amount","$47d4ff9957288465$var$delay","$47d4ff9957288465$var$step","addEventListener","e","preventDefault","Number","elements","delay","value","amount","step","setInterval","console","log","position3","delay3","shouldResolve","Math","random","Promise","resolve","reject","position","$47d4ff9957288465$var$createPromise","then","position1","delay1","$parcel$interopDefault","Notify","success","catch","position2","delay2","failure","clearInterval"],"version":3,"file":"03-promises.2b5ee43d.js.map"}